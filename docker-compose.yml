version: '3.8'

services:
  mongodb:
    platform: linux/amd64
    image: mongo:4.4
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - ldf-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  neo4j:
    platform: linux/amd64
    image: neo4j:5.12.0
    container_name: neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - ldf-network
    environment:
      - NEO4J_AUTH=neo4j/neo4j123
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  crud:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.crud
      args:
        - DOCKER_DEFAULT_PLATFORM=linux/amd64
    container_name: crud
    ports:
      - "50051:50051"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=neo4j123
      - MONGO_URI=mongodb://admin:admin123@mongodb:27017/admin?authSource=admin
      - MONGO_DB_NAME=testdb
      - MONGO_COLLECTION=metadata
      - MONGO_ADMIN_USER=admin
      - MONGO_ADMIN_PASSWORD=admin123
      - CRUD_SERVICE_HOST=0.0.0.0
      - CRUD_SERVICE_PORT=50051
      - NEXOAN_SSL_CERT_PATH=/app/certs
    depends_on:
      mongodb:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    networks:
      - ldf-network
    healthcheck:
      test: ["CMD-SHELL", "grpc_health_probe -addr=localhost:50051 -tls=false"]
      interval: 30s
      timeout: 10s
      retries: 3

  update:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.update
    container_name: update
    ports:
      - "8080:8080"
    networks:
      - ldf-network
    environment:
      - CRUD_SERVICE_HOST=crud
      - CRUD_SERVICE_PORT=50051
      - UPDATE_SERVICE_HOST=0.0.0.0
      - UPDATE_SERVICE_PORT=8080
    depends_on:
      crud:
        condition: service_healthy

  query:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.query
    container_name: query
    ports:
      - "8081:8081"
    networks:
      - ldf-network
    environment:
      - CRUD_SERVICE_HOST=crud
      - CRUD_SERVICE_PORT=50051
      - QUERY_SERVICE_HOST=0.0.0.0
      - QUERY_SERVICE_PORT=8081
    depends_on:
      crud:
        condition: service_healthy
    # TODO: Add healthcheck for query service

  e2e:
    platform: linux/amd64
    image: python:3.9-slim
    container_name: e2e
    volumes:
      - ./design/tests/e2e:/app/tests
    working_dir: /app/tests
    networks:
      - ldf-network
    environment:
      - PYTHONUNBUFFERED=1
      - UPDATE_SERVICE_HOST=update
      - UPDATE_SERVICE_PORT=8080
      - QUERY_SERVICE_HOST=query
      - QUERY_SERVICE_PORT=8081
    depends_on:
      # TODO: Add depends on once healthcheck is added for query/update service
      - crud
      - query
      - update
    command: >
      sh -c "pip install requests &&
             python3 basic_crud_tests.py &&
             python3 basic_query_tests.py"

networks:
  ldf-network:
    driver: bridge

volumes:
  mongodb_data:
  neo4j_data:
  neo4j_logs: 